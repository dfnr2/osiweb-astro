\ Information                                          DX-FORTH2                                                                OSI character rom conversion utility                                                                                            Converts an Ohio Scientific character rom dump between          C1/Superboard2 and C2/C4 modelsoad - TITLE                                                  empty forth definitions decimal application                                                                                     : TITLE ." ROMFLIP version 1.0  11-Sep-01" cr ;                                                                                 cr .( Compiling: )  title  2 load                                                                                               cr .( Save to disk? )  y/n  [if]                                  turnkey program  ROMFLIP  [then]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              \ Load -                                                         4 5 thru                       \ error handling                 6 8 thru                       \ file primitives                9 13 thru                      \ default files                 \ 14 load                        \ buffered input file          \ 15 load                        \ buffered output file         \ 16 18 thru                     \ string functions              19 24 thru                     \ command-line parsing           25 30 thru                     \ application                                                                                   ' (break?)   is break?          \ enable user break             ' closefiles is (error)         \ closefiles on error                                                                                                                                                                                                                                                                           \ Loadrror - (ERROR) ERROR1-2                                      \ (ERROR) is used to trap error events.  When debugging in      \ forth ' QUIT IS (ERROR) will prevent exit to dos on error.                                                                    defer (ERROR)                                                                                                                   \ quit to dos with return code 1                                : ERROR1  ( -- )  (error)  1 return ;                                                                                           \ quit with abort msg                                           : ERROR2  ( -- )  ."  ... aborting" cr  error1 ;                                                                                                                                                                                                                                                                                                                                                \ Error - (BREAK?) BREAK?                                       \ Check for user break                                          : (BREAK?)  ( -- )  key? if                                         key  dup 27 =  swap 3 =  or if ( esc or ctrl-c )                  beep cr ." User break - exit program? "                         y/n if  error2  then  then  then ;                                                                                        deferiles - ERROR3-6 READF WRITEF                                 : ERROR3  ( -- )  cr ." Read error"  error2 ;                   : ERROR4  ( -- )  cr ." Write error"  error2 ;                  : ERROR5  ( -- )  cr ." Position error"  error2 ;               : ERROR6  ( -- )  cr ." Size error"  error2 ;                                                                                   \ Read binary                                                   : READF  ( a u handle -- a u2 )                                   break?  >r over swap r>  read-file if error3 then ;                                                                           \ Write binary                                                  : WRITEF  ( a u handle -- )                                       break?  write-file if error4 then ;                                                                                                                                                                                                                           \ Files - READL WRITEL FPOS REPOSF                              \ Read text.  flag=0 if EOF                                     : READL  ( a u handle -- a u2 flag )                              break?  >r over swap r>  read-line if error3 then ;                                                                           \ Write text                                                    : WRITEL  ( a u handle -- )                                       break?  write-line if error4 then ;                                                                                           \ File position                                                 : FPOS  ( handle  -- ud )  file-position if error5 then ;                                                                       \ Reposition file                                               : REPOSF  ( ud handle  -- )  reposition-file if error5 then ;                                                                                                                                   \ Files - FSIZE RESIZEF                                         \ File size                                                     : FSIZE  ( handle  -- ud )  file-size if error6 then ;                                                                          \ Resize file                                                   : RESIZEF  ( ud handle  -- )  resize-file if error6 thenefault files - buffers                                       1024 constant INBUFSIZE         \ buffered file size            1024 constant OUTBUFSIZE                                                                                                        variable INFILE                 \ file open flag                variable INHANDLE               \ file handle                   variable INPTR                  \ buffer pointer                variable INSIZ                  \ current buffer size           create   INNAME  65 allot       \ filename buffer                                                                               variable OUTFILE                                                variable OUTHANDLE                                              variable OUTPTR                                                 variable OUTSIZ                                                 create   OUTNAME  65 allot                                                                                                      \ Default files - CLOSEFILES                                    defer RESETINBUF   ' noop is resetinbuf                         defer RESETOUTBUF  ' noop is resetoutbuf                                                                                        \ Close files.  Must never invoke the standard error handler.   : CLOSEFILES  ( -- )                                              infile  dup @ if  inhandle  @ close-file drop  then  off        outfile dup @ if  outhandle @ close-file drop  then  offefault files - OPENINFILE                                    \ Open infile                                                   : OPENINFILE  ( mode -- )                                         infile off                                                      cr ." infile:  "                                                inname count  2dup upper  2dup type                             rot open-file  if                                                 5 = if  ."  access denied"  else  ."  not found"  then          error2  then                                                  inhandle !  infile on  resetinbuf ;                                                                                                                                                                                                                                                                                                                                                                                                                           \ Default files - OPENOUTFILE                                   \ Open outfile                                                  : OPENOUTFILE  ( mode -- )                                        outfile off                                                     cr ." outfile: "                                                outname count  2dup upper  2dup type                            2dup r/o open-file  0= if  close-file drop                        beep ."  exists - overwrite? "  y/n 0= if error2 then         else  drop  then                                                rot create-file  if                                               ."  create error"  error2  then                               outhandle !  outfile on  resetoutbuf ;                                                                                                                                                                                                                                                                                        \ Default files - READDATA WRITEDATA READTEXT WRITETEXT         \ Unbuffered file functions                                     \ Read binary from infile                                       : READDATA  ( a u1 -- a u2 )  inhandle @ readf ;                                                                                \ Write binary to outfile                                       : WRITEDATA  ( a u -- )  outhandle @ writef ;                                                                                   \ Read text from infile.  fl=0 if EOF                           : READTEXT  ( a u1 -- a u2 fl )  inhandle @ readl ;                                                                             \ Write text to outfile                                         : WRITETEXT  ( a u -- )  outhandle @ writel ;                                                                                                                                                                                                                   \ Default files - INBUF REFILLREAD READCHAR                     \ Buffered file functions                                       create INBUF  inbufsize allot                                                                                                   \ Refill read buffer from infile                                : REFILLREAD  ( -- a u )                                          inbuf inbufsize readdata  dup insiz !  over inptr ! ;                                                                         \ Read char from buffered infile                                : READCHAR  ( -- char -1 | 0 )                                    insiz @  0= if  refillread swap drop  0= if 0 exit then  then   inptr @  c@  1 inptr +!  -1 insiz +!  -1 ;                                                                                    \ Reset buffer pointers                                         : (RESETINBUF)  ( -- )  inbuf inptr !  insiz off ;              ' (resetinbuf) is resetinbuf                                    \ Default files - OUTBUF FLUSHWRITE WRITECHAR                   \ Buffered file functions                                       create OUTBUF  outbufsize allot                                                                                                 \ Flush write buffer to outfile                                 : FLUSHWRITE  ( -- )                                              outbuf  dup  outsiz @  writedata  outptr !  outsiz off ;                                                                      \ Write char to buffered outfile                                : WRITECHAR  ( char -- )                                          outsiz @  outbufsize = if  flushwrite  then                     outptr @ c!  1 outptr +!  1 outsiz +! ;                                                                                       \ Reset buffer pointers                                         : (RESETOUTBUF)  ( -- )  outbuf outptr !  outsiz off ;          ' (resetoutbuf) is resetoutbuf                                  \ Strings - STRING MLEN$ $! $OFF                                \ Define string variable with max length u (255 max)            : STRING                                                          create  ( u -- )  255 min  1 max  dup c,  0 c,  allot           does>  ( -- sa su )  1+ count ;                                                                                               \ Return maximum length of string variable                      : MLEN$  ( sa su -- u )  drop  2- c@ ;                                                                                          \ Store string a u into the string variable sa su               : $!  ( a u sa su -- )  over >r  mlen$ min  r> 1-  place ;                                                                      \ Clear string variable sa su                                   : $OFF  ( sa su -- )  0 0 2swap $! ;                                                                                                                                                            \ Strings - LEN$ MID$ LEFT$ RIGHT$                              \ Return string length                                          : LEN$  ( a u -- u )  swap drop ;                                                                                               \ Return u2 characters from string starting at offset n         : MID$  ( a1 u1 n u2 -- a2 u3 )  >r  0 max  /string  r> min ;                                                                   \ Return u2 left-most characters from the string                : LEFT$  ( a1 u1 u2 -- a2 u3 )  0 swap  mid$ ;                                                                                  \ Return u2 right-most characters from the string               : RIGHT$  ( a1 u1 u2 -- a2 u3 )  2dup -  swap  mid$ ;                                                                                                                                                                                                                                                                           \ Strings - $= $+                                               \ Compare strings for equality                                  : $=  ( a1 u1 a2 u2 -- flag )  compare 0= ;                                                                                     255  ( maximum length of concatenated string)                   here ( where it will go )                                       over allot                                                                                                                      \ Concatenate two strings placing result in temp buffer         : $+  ( a1 u1 a2 u2 -- a3 u3 )                                    2swap  [ over ] literal min  0 max  >r  [ dup ] literal         r@ cmove  [ dup ] literal  r>  2swap 2over  [ over ] literal    swap  /string  rot min  0 max  dup >r  cmove  r> + ;                                                                          2drop                                                                                                                           \ Cmdline parser - ARGC ARGV                                    \ ARGC controls the parsed string ARGV will return.  ARGC is    \ incremented on each ARGV call.  ARGC=0 parses from start.                                                                     variable ARGC   argc off                                                                                                        \ Parse the next space-delimited string from command-line.      : ARGV  ( -- a u -1 | 0 )                                         1 argc +!  0 0  argc @                                          128 count  rot 0 ?do                                              2swap 2drop                                                     bl skip  2dup bl scan                                           rot over -  rot rot  loop                                     2drop                                                           dup if  -1  else  and  then ;                                                                                                 \ Cmdline parser - BADOPTION /NUM /HEXNUM /NUMRANGE             : BADOPTION  ( -- )  cr ." Invalid option"  error2 ;                                                                            \ Parse number n from string a+1 u-1                            : /NUM  ( a u -- 0 0 n )                                          1 /string  number? if  drop  else  badoption  then              0 0 ( stops further parsing) rot ;                                                                                            \ Parse hex number n from string a+1 u-1                        : /HEXNUM  ( a u -- 0 0 n )                                       base @ >r  hex /num  r> base ! ;                                                                                              \ As for /NUM but checks n3 is in the range n1 to n2            : /NUMRANGE  ( a u n1 n2 -- 0 0 n3 )                              2>r /num  dup  2r> 1+  within  0= if badoption then ;                                                                         \ Cmdline parser - SETOPTION                                    \ Process each character in a switch option string                                                                              defer SETOPTION  ( a u char -- a u )  ' drop is setoption                                                                       exit                                                                                                                            \ Example                                                       : (SETOPTION)  ( a u char -- a u )                                upcase [char] A = if  a-variable on  else  badoption  then ;                                                                  ' (setoption) is setoption                                                                                                                                                                                                                                                                                                      \ Cmdline parser - PARSEOPTION                                  \ Parse multiple switch options from the command-line           : PARSEOPTION  ( -- )                                             begin                                                             argv                                                          while  ( not end )                                                over c@                                                         dup   [char] /  =                                               swap  [char] -  =  or if ( switch char )                          begin  1 /string  dup                                           while  over c@  setoption                                       repeat  2drop                                                 else                                                              2drop  -1 argc +! ( stop parsing )  exit                      then                                                          repeat ;                                                      \ Cmdline parser - PARSEFILENAME                                \ Parse filenames or non-option strings on the command-line                                                                     defer PARSEFILENAME  ( -- )  ' noop is parsefilename                                                                            exit                                                                                                                            \ Example                                                       : (PARSEFILENAME)  ( -- )                                         argv 0= if ." no filename specified"  abort  then               64 min inname place ;                                                                                                         ' (parsefilename) is parsefilename                                                                                                                                                                                                                              \ Cmdline parser - PARSECMD                                     \ Parse command-line setting options and filenames.             : PARSECMD  ( -- )                                                argc off  parseoption  parsefilenamecr ." Usage:  ROMFLIP infile [outfile]" cr                                                                                      cr ." OSI character rom conversion utility."                    cr ." Converts an Ohio Scientific character rom dump"           cr ." between C1/Superboard2 and C2/C4 models."                 cr errorarse filenames                                               : (PARSEFILENAME)  ( -- )                                         argv  0= if  help  then  64 min  inname place                   argv  0= if  inname count  -filename  then                      s" NEW" +filename  64 min  outname place ;                                                                                    ' (parsefilename) is parsefilenameeverse sequence of bits in a byte                            : REVERSEBYTE  ( x1 -- x2 )                                       0  8 0 do                                                         >r  2 /mod swap  r> 2* +  loop                                swap drop ;                                                                                                                   \                                                               : REVERSEDATA  ( a u -- )                                         over + swap ?do                                                   i c@ reversebyte  i c!  loop ;                                                                                                                                                                                                                                                                                                                                                              \ ROMFLIP                                                       \                                                               : ROMFLIP  ( -- )                                                 r/o openinfile                                                  r/w openoutfile  cr                                             pad 2048 readdata                                               2dup reversedata                                                writedata                                                       closefiles                                                      cr ." done" cr ;                                                                                                                                                                                                                                                                                                                                                                                                                                              \ DEFAULTS PROGRAM                                              \ Set defaults                                                  : DEFAULTS  ( -- )                                                ;                                                                                                                             \ Main                                                          : PROGRAM  ( -- )                                                 cr title                      \ show program name               defaults                      \ set defaults                    parsecmd                      \ get filenames and options       romflip ;                     \ execute